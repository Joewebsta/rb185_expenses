#! /usr/bin/env ruby
# frozen_string_literal: true

require 'pg'

CONNECTION = PG.connect(dbname: 'expenses')

def list_expenses
  result = CONNECTION.exec('SELECT * FROM expenses ORDER BY created_on ASC')

  result.each do |tuple|
    columns = [tuple['id'],
               tuple['created_on'],
               tuple['amount'].rjust(7),
               tuple['memo']]

    puts columns.join(' | ')
  end
end

def display_help
  puts <<~HELP
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo 
    
  HELP
end

def add_expense(amount, memo)
  date = Date.today
  sql = 'INSERT INTO expenses (amount, memo, created_on) VALUES ($1, $2, $3)'
  CONNECTION.exec_params(sql, [amount, memo, date])
end

command = ARGV[0]
case command
when 'list' then list_expenses
when 'add'
  amount = ARGV[1]
  memo = ARGV[2]
  abort 'You must provide an amount and memo.' unless amount && memo
  add_expense(amount, memo)
else display_help
end
